单例模式：确保某一个类只有一个实例，而且自行实例化并向整个系统提供这个实例，这个类称为单例类，它提供全局访问的方法。单例模式是一种对象创建模式

【设计分析】
	单例模式有3个要点：
		1.某个类只能有一个实例
		2.它必须自行创建这个实例
		3.它必须自行向整个系统提供这个实例　
【优缺点】
	优点：
		1.提供了对唯一实例的受控访问。单例类封装了它的唯一实例，所以它可以严格控制客户怎样以及何时访问它。
		2.由于在系统内存中只存在一个对象，因此可以节约系统资源，对于一些需要频繁创建和销毁的对象，单例模式无疑可以提高系统的性能。
	缺点：
		1.单例模式中没有抽象层，因此单例类的扩展有很大的困难
		2.单例类的职责过重，在一定程度上违背了单一职责的原则。因为单例类既提供了业务方法，又提供了创建对象的方法
		很多高级面向对象编程语言如C#和Java等都提供了垃圾回收机制，如果实例化的共享对象长时间不被利用，系统则会认为它是垃圾，于是会自动销毁并回收资源
【本例单例模式设计需求】：一个服务器负载均衡器（Load Balance）软件的开发
	1.该软件运行在一台负载均衡服务器上面，可以将并发访问和数据流量分发到服务器集群中的多台设备上进行并发处理，提高系统的整体处理能力
	2.缩短响应时间。由于集群中的服务器需要动态增减，且客户端请求需要统一分发
	3.一个负载均衡器实例来管理服务器和分发请求，否则会带来服务器状态的不一致以及请求的分配冲突等问题